{"pageProps":{"id":"use-boolean-state","name":"UseBooleanState","demo":{"ts":"import useBooleanState from \"@clave/use-boolean-state\";\nimport * as React from \"react\";\nimport style from \"./style.module.css\";\n\nexport default function Demo() {\n  const [isActive, setActive] = useBooleanState();\n\n  return (\n    <div className={style.demo}>\n      <button onClick={setActive.toggle}>Toggle</button>\n\n      {isActive ? (\n        <div style={{ border: \"2px solid darkgreen\", background: \"#aaffaa\" }}>\n          <h2>It is active</h2>\n          <button onClick={setActive.toFalse}>Deactivate</button>\n        </div>\n      ) : (\n        <div style={{ border: \"2px solid darkred\", background: \"#ffaaaa\" }}>\n          <h2>It is inactive</h2>\n          <button onClick={setActive.toTrue}>Activate</button>\n        </div>\n      )}\n    </div>\n  );\n}\n","js":"import useBooleanState from \"@clave/use-boolean-state\";\nimport * as React from \"react\";\nimport style from \"./style.module.css\";\nexport default function Demo() {\n    const [isActive, setActive] = useBooleanState();\n    return (<div className={style.demo}>\n      <button onClick={setActive.toggle}>Toggle</button>\n\n      {isActive ? (<div style={{ border: \"2px solid darkgreen\", background: \"#aaffaa\" }}>\n          <h2>It is active</h2>\n          <button onClick={setActive.toFalse}>Deactivate</button>\n        </div>) : (<div style={{ border: \"2px solid darkred\", background: \"#ffaaaa\" }}>\n          <h2>It is inactive</h2>\n          <button onClick={setActive.toTrue}>Activate</button>\n        </div>)}\n    </div>);\n}\n"},"source":{"ts":"import { Dispatch, SetStateAction, useMemo, useState } from \"react\";\n\nexport interface SetBooleanState extends Dispatch<SetStateAction<boolean>> {\n  /**\n   * Toggle the boolean value\n   */\n  toggle: () => void;\n\n  /**\n   * Set the boolean value to false\n   */\n  toFalse: () => void;\n\n  /**\n   * Set the boolean value to true\n   */\n  toTrue: () => void;\n}\n\n/**\n * Create a state for a boolean value with useful methods\n *\n * @param initial The initial value or factory function, defaults to false\n * @returns A pair of state and setState\n */\nexport default function useBooleanState(\n  initial: boolean | (() => boolean) = false\n) {\n  const [state, setState] = useState<boolean>(initial);\n\n  const setBooleanState = useMemo(() => {\n    const setValue: SetBooleanState = (v: SetStateAction<boolean>) => setState(v);\n\n    /**\n     * Toggle the boolean value\n     */\n    setValue.toggle = () => setState((x) => !x);\n\n    /**\n     * Set the boolean value to false\n     */\n    setValue.toFalse = () => setState(false);\n\n    /**\n     * Set the boolean value to true\n     */\n    setValue.toTrue = () => setState(true);\n\n    return setValue;\n  }, []);\n\n  return [state, setBooleanState] as const;\n}\n","js":"import { useMemo, useState } from \"react\";\n/**\n * Create a state for a boolean value with useful methods\n *\n * @param initial The initial value or factory function, defaults to false\n * @returns A pair of state and setState\n */\nexport default function useBooleanState(initial = false) {\n    const [state, setState] = useState(initial);\n    const setBooleanState = useMemo(() => {\n        const setValue = (v) => setState(v);\n        /**\n         * Toggle the boolean value\n         */\n        setValue.toggle = () => setState((x) => !x);\n        /**\n         * Set the boolean value to false\n         */\n        setValue.toFalse = () => setState(false);\n        /**\n         * Set the boolean value to true\n         */\n        setValue.toTrue = () => setState(true);\n        return setValue;\n    }, []);\n    return [state, setBooleanState];\n}\n"},"links":[{"name":"UseArrayState","path":"use-array-state"},{"name":"UseBooleanState","path":"use-boolean-state"},{"name":"UseDebounce","path":"use-debounce"},{"name":"UseDirtyTracking","path":"use-dirty-tracking"},{"name":"UseObjectState","path":"use-object-state"}],"readme":"<h1>useBooleanState</h1>\n<blockquote>\n<p>Make it easier to work with state of boolean values</p>\n</blockquote>\n<p><a href=\"https://claveconsulting.github.io/react-hooks/use-boolean-state\">Documentation</a></p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @clave/use-boolean-state\n</code></pre></div>\n<p>The goal of this hook is to make it easier to work with boolean state. It's very common to toggle a boolean value, and it's possible to do that with <code>setState(x => !x)</code>, but isn't it easier and clearer to use <code>setState.toggle()</code>? This is very useful for buttons, where you can pass the toggle method by reference as <code>&#x3C;button onClick={isOpen.toggle}>Open&#x3C;/button></code>. There are also <code>setState.toTrue()</code> and <code>setState.toFalse()</code> available for easily setting or resetting the value.</p>\n<h2>Usage</h2>\n<div class=\"remark-highlight\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">useBooleanState</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"@clave/use-boolean-state\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// useBooleanState instead of useState</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>checked<span class=\"token punctuation\">,</span> setChecked<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useBooleanState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//defaults to false</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>checked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// setChecked behaves like normal</span>\n<span class=\"token function\">setChecked</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// Set the value to true</span>\nsetChecked<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toTrue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// Set the value to false</span>\nsetChecked<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFalse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// Set the value to the opposite</span>\nsetChecked<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true -> false, false -> true</span>\n</code></pre></div>\n","changelog":"<h1>Change Log</h1>\n<p>All notable changes to this project will be documented in this file.\nSee <a href=\"https://conventionalcommits.org\">Conventional Commits</a> for commit guidelines.</p>\n<h2><a href=\"https://github.com/ClaveConsulting/react-hooks/compare/@clave/use-boolean-state@1.0.1...@clave/use-boolean-state@1.0.2\">1.0.2</a> (2021-01-07)</h2>\n<p><strong>Note:</strong> Version bump only for package @clave/use-boolean-state</p>\n<h2><a href=\"https://github.com/ClaveConsulting/react-hooks/compare/@clave/use-boolean-state@0.0.2...@clave/use-boolean-state@1.0.1\">1.0.1</a> (2020-10-20)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li>time for v1.0.0 (<a href=\"https://github.com/ClaveConsulting/react-hooks/commit/0c6021898e7f87e1b1950d28131ec610165a8d15\">0c60218</a>)</li>\n</ul>\n<h2>0.0.2 (2020-10-14)</h2>\n<p><strong>Note:</strong> Version bump only for package @clave/use-boolean-state</p>\n"},"__N_SSG":true}